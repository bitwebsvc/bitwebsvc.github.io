/*! For license information please see 8fc7f1ee.d1542ee1.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[96295],{61647:(e,n,t)=>{t.d(n,{ZP:()=>i});var r=t(24246),a=t(71670);function o(e){const n=Object.assign({admonition:"admonition",p:"p",strong:"strong",a:"a"},(0,a.ah)(),e.components);return(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsxs)(n.p,{children:["This documentation is still ",(0,r.jsx)(n.strong,{children:"experimental"})," and details are subject to changes as we iterate. Feel free to share your feedback on the ",(0,r.jsx)(n.a,{href:"https://github.com/reactwg/react-native-new-architecture/discussions/8",children:"discussion inside the working group"})," for this page."]}),(0,r.jsxs)(n.p,{children:["Moreover, it contains several ",(0,r.jsx)(n.strong,{children:"manual steps"}),". Please note that this won't be representative of the final developer experience once the New Architecture is stable. We're working on tools, templates and libraries to help you get started fast on the New Architecture, without having to go through the whole setup."]})]})}const i=function(e={}){const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}},86695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>h,toc:()=>p});var r=t(24246),a=t(71670),o=t(61647),i=t(48375),s=t(86386),l=t(11674);const c={id:"pillars-codegen",title:"Codegen"},d=void 0,h={id:"the-new-architecture/pillars-codegen",title:"Codegen",description:"The Codegen is not a proper pillar, but it is a tool that can be used to avoid writing a lot of repetitive code. Using Codegen is not mandatory: all the code that is generated by it can also be written manually. However, it generates scaffolding code that could save you a lot of time.",source:"@site/versioned_docs/version-0.73/the-new-architecture/pillars-codegen.md",sourceDirName:"the-new-architecture",slug:"/the-new-architecture/pillars-codegen",permalink:"/docs/the-new-architecture/pillars-codegen",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/react-native-website/blob/main/website/../docs/the-new-architecture/pillars-codegen.md",tags:[],version:"0.73",lastUpdatedAt:1704504779,formattedLastUpdatedAt:"Jan 6, 2024",frontMatter:{id:"pillars-codegen",title:"Codegen"},sidebar:"docs",previous:{title:"Fabric Native Components",permalink:"/docs/the-new-architecture/pillars-fabric-components"},next:{title:"C++ Turbo Native Modules",permalink:"/docs/the-new-architecture/cxx-cxxturbomodules"}},u={},p=[{value:"Running the Codegen",id:"running-the-codegen",level:2},{value:"The Generated Code",id:"the-generated-code",level:2},{value:"Turbo Native Modules",id:"turbo-native-modules",level:3},{value:"Fabric Native Components",id:"fabric-native-components",level:3},{value:"RCTThirdPartyFabricComponentsProvider",id:"rctthirdpartyfabriccomponentsprovider",level:3},{value:"Running the Codegen",id:"running-the-codegen-1",level:2},{value:"The Generated Code",id:"the-generated-code-1",level:2},{value:"Turbo Native Module",id:"turbo-native-module",level:3},{value:"Fabric Native Component",id:"fabric-native-component",level:3}];function m(e){const n=Object.assign({p:"p",strong:"strong",a:"a",h1:"h1",code:"code",pre:"pre",admonition:"admonition",h2:"h2",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.ZP,{}),"\n","\n","\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," is not a proper pillar, but it is a tool that can be used to avoid writing a lot of repetitive code. Using ",(0,r.jsx)(n.strong,{children:"Codegen"})," is not mandatory: all the code that is generated by it can also be written manually. However, it generates scaffolding code that could save you a lot of time."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," is invoked automatically by React Native every time an iOS or Android app is built. Occasionally, you would like to run the scripts that generate the code manually to know which types and files are actually generated: this is a common scenario when developing ",(0,r.jsx)(n.a,{href:"./pillars-turbomodules",children:(0,r.jsx)(n.strong,{children:"Turbo Native Modules"})})," and ",(0,r.jsx)(n.a,{href:"./pillars-fabric-components",children:(0,r.jsx)(n.strong,{children:"Fabric Native Components"})}),", for example."]}),"\n",(0,r.jsxs)(n.p,{children:["This guide teaches how to configure the ",(0,r.jsx)(n.strong,{children:"Codegen"}),", and how to invoke it manually for each platform, and describes the generated code."]}),"\n",(0,r.jsx)(n.h1,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.p,{children:["You always need a React Native app to generate the code properly, even when invoking the ",(0,r.jsx)(n.strong,{children:"Codegen"})," manually."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," process is tightly coupled with the build of the app, and the scripts are located in the ",(0,r.jsx)(n.code,{children:"react-native"})," NPM package."]}),"\n",(0,r.jsx)(n.p,{children:"For the sake of this guide, create a project using the React Native CLI as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npx react-native init SampleApp --version 0.70.0\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This guide assumes that the React Native version in use is 0.70.0 or greater.\nPrevious versions of React Native uses a version of ",(0,r.jsx)(n.strong,{children:"Codegen"})," that requires a slightly different setup."]})}),"\n",(0,r.jsxs)(n.p,{children:["Then, add the module that requires the ",(0,r.jsx)(n.strong,{children:"Codegen"})," as an NPM dependency of the app:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"yarn add <path/to/your/TurboNativeModule_or_FabricNativeComponent>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See how to create a ",(0,r.jsx)(n.a,{href:"pillars-turbomodules",children:"Turbo Native Module"})," or a ",(0,r.jsx)(n.a,{href:"pillars-fabric-components",children:"Fabric Native Component"})," to get more information on how to configure them."]}),"\n",(0,r.jsxs)(n.p,{children:["The rest of this guide assumes that you have a ",(0,r.jsx)(n.code,{children:"Turbo Native Module"})," and/or a ",(0,r.jsx)(n.code,{children:"Fabric Native Component"})," properly set up."]}),"\n",(0,r.jsx)(n.h1,{id:"ios",children:"iOS"}),"\n",(0,r.jsx)(n.h2,{id:"running-the-codegen",children:"Running the Codegen"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," for iOS relies on some Node scripts that are invoked during the build process. The scripts are located in the ",(0,r.jsx)(n.code,{children:"MyApp/node_modules/react-native/scripts/"})," folder."]}),"\n",(0,r.jsxs)(n.p,{children:["The script that you have to run is the ",(0,r.jsx)(n.code,{children:"generate-codegen-artifacts.js"})," script. This searches among all the dependencies of the app, looking for JS files that respects some specific conventions (look at ",(0,r.jsx)(n.a,{href:"pillars-turbomodules",children:"TurboModules"})," and ",(0,r.jsx)(n.a,{href:"pillars-fabric-components",children:"Fabric Components"})," sections for details), and it generates the required code."]}),"\n",(0,r.jsx)(n.p,{children:"To invoke the script, you can run this command from the root folder of your app:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"node node_modules/react-native/scripts/generate-codegen-artifacts.js \\\n    --path SampleApp/ \\\n    --outputPath <an/output/path> \\\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Given that the app has ",(0,r.jsx)(n.code,{children:"Turbo Native Modules"})," and/or ",(0,r.jsx)(n.code,{children:"Fabric Native Components"})," configured as a dependency, ",(0,r.jsx)(n.strong,{children:"Codegen"})," looks for all of them and generates the code in the path you provided."]}),"\n",(0,r.jsx)(n.h2,{id:"the-generated-code",children:"The Generated Code"}),"\n",(0,r.jsxs)(n.p,{children:["If you run the ",(0,r.jsx)(n.strong,{children:"Codegen"})," in your app with an output path of ",(0,r.jsx)(n.code,{children:"codegen"}),", for example, you obtain the following structure:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:'language-title="iOS',metastring:'Codegen output"',children:"codegen\n\u2514\u2500\u2500 build\n    \u2514\u2500\u2500 generated\n        \u2514\u2500\u2500 ios\n            \u251c\u2500\u2500 MyTurboModuleSpecs\n            \u2502   \u251c\u2500\u2500 MyTurboModuleSpecs-generated.mm\n            \u2502   \u2514\u2500\u2500 MyTurboModuleSpecs.h\n            \u251c\u2500\u2500 FBReactNativeSpec\n            \u2502   \u251c\u2500\u2500 FBReactNativeSpec-generated.mm\n            \u2502   \u2514\u2500\u2500 FBReactNativeSpec.h\n            \u251c\u2500\u2500 RCTThirdPartyFabricComponentsProvider.h\n            \u251c\u2500\u2500 RCTThirdPartyFabricComponentsProvider.mm\n            \u2514\u2500\u2500 react\n                \u2514\u2500\u2500 renderer\n                    \u2514\u2500\u2500 components\n                        \u251c\u2500\u2500 MyFabricComponent\n                        \u2502   \u251c\u2500\u2500 ComponentDescriptors.h\n                        \u2502   \u251c\u2500\u2500 EventEmitters.cpp\n                        \u2502   \u251c\u2500\u2500 EventEmitters.h\n                        \u2502   \u251c\u2500\u2500 Props.cpp\n                        \u2502   \u251c\u2500\u2500 Props.h\n                        \u2502   \u251c\u2500\u2500 RCTComponentViewHelpers.h\n                        \u2502   \u251c\u2500\u2500 ShadowNodes.cpp\n                        \u2502   \u2514\u2500\u2500 ShadowNodes.h\n                        \u2514\u2500\u2500 rncore\n                            \u251c\u2500\u2500 ComponentDescriptors.h\n                            \u251c\u2500\u2500 EventEmitters.cpp\n                            \u251c\u2500\u2500 EventEmitters.h\n                            \u251c\u2500\u2500 Props.cpp\n                            \u251c\u2500\u2500 Props.h\n                            \u251c\u2500\u2500 RCTComponentViewHelpers.h\n                            \u251c\u2500\u2500 ShadowNodes.cpp\n                            \u2514\u2500\u2500 ShadowNodes.h\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"codegen"})," folder sits at the root of the hierarchy, as expected. Nested into it, there are two more folders: ",(0,r.jsx)(n.code,{children:"build/generated"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Then, there is an ",(0,r.jsx)(n.code,{children:"ios"})," folder that contains:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A custom folder for each TurboModule."}),"\n",(0,r.jsxs)(n.li,{children:["The header (",(0,r.jsx)(n.code,{children:".h"}),") and implementation (",(0,r.jsx)(n.code,{children:".mm"}),") files for the ",(0,r.jsx)(n.code,{children:"RCTThirdPartyFabricComponentsProvider"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["A base ",(0,r.jsx)(n.code,{children:"react/renderer/components"})," folder which contains a custom folder for each ",(0,r.jsx)(n.code,{children:"Fabric Native Component"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["In the example above, there are both a TurboModule and a set of Fabric Native Components. These are generated by React Native itself: ",(0,r.jsx)(n.code,{children:"FBReactNativeSpec"})," and ",(0,r.jsx)(n.code,{children:"rncore"}),". These modules will always appear even if you don't have any extra TurboModule or Fabric Native Component: React Native requires them in order to work properly."]}),"\n",(0,r.jsx)(n.h3,{id:"turbo-native-modules",children:"Turbo Native Modules"}),"\n",(0,r.jsx)(n.p,{children:"Each folder contains two files: an interface file and an implementation file."}),"\n",(0,r.jsx)(n.p,{children:"The interface files have the same name as that of the Turbo Native Module and contain methods to initialize the JSI interface."}),"\n",(0,r.jsxs)(n.p,{children:["The implementation files, instead, have the ",(0,r.jsx)(n.code,{children:"-generated"})," suffix and contain the logic to invoke the native methods from JS and vice-versa."]}),"\n",(0,r.jsx)(n.h3,{id:"fabric-native-components",children:"Fabric Native Components"}),"\n",(0,r.jsxs)(n.p,{children:["The content of each Fabric Native Component folder contains several files. The basic element for a Fabric Native Component is the ",(0,r.jsx)(n.code,{children:"ShadowNode"}),": it represents a node in the React abstract tree. The ",(0,r.jsx)(n.code,{children:"ShadowNode"})," represents a React entity; therefore, it could need some props, which are defined in the ",(0,r.jsx)(n.code,{children:"Props"})," files and, sometimes, an ",(0,r.jsx)(n.code,{children:"EventEmitter"}),", defined in the corresponding file."]}),"\n",(0,r.jsxs)(n.p,{children:["Additionally, the ",(0,r.jsx)(n.strong,{children:"Codegen"})," also creates a ",(0,r.jsx)(n.code,{children:"ComponentDescriptor.h"})," and an ",(0,r.jsx)(n.code,{children:"RCTComponentViewHelpers.h"})," files: the first one is used by React Native and Fabric to properly get a reference to the Fabric Native Component, while the latter contains some helper methods and protocols that can be implemented by the Native View to properly respond to JSI invocations."]}),"\n",(0,r.jsxs)(n.p,{children:["For further details about how Fabric works, have a look at the ",(0,r.jsx)(n.a,{href:"/architecture/fabric-renderer",children:"Renderer"})," section."]}),"\n",(0,r.jsx)(n.h3,{id:"rctthirdpartyfabriccomponentsprovider",children:"RCTThirdPartyFabricComponentsProvider"}),"\n",(0,r.jsx)(n.p,{children:"These are interface and implementation files for a registry. React Native uses this registry at runtime to retrieve the right class for a required Fabric Native Component. Once React Native has a handle to that class, it can instantiate it."}),"\n",(0,r.jsx)(n.h1,{id:"android",children:"Android"}),"\n",(0,r.jsx)(n.h2,{id:"running-the-codegen-1",children:"Running the Codegen"}),"\n",(0,r.jsxs)(n.p,{children:["Android ",(0,r.jsx)(n.code,{children:"Codegen"})," relies on a Gradle task to generate the required code. First, you need to configure the Android app to work with the New Architecture; otherwise, the Gradle task fails."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Open the ",(0,r.jsx)(n.code,{children:"MyApp/android/gradle.properties"})," file."]}),"\n",(0,r.jsxs)(n.li,{children:["Flip the ",(0,r.jsx)(n.code,{children:"newArchEnabled"})," flag from ",(0,r.jsx)(n.code,{children:"false"})," to ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["After that, you can navigate into the ",(0,r.jsx)(n.code,{children:"SampleApp/android"})," folder and run:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"./gradlew generateCodegenArtifactsFromSchema\n"})}),"\n",(0,r.jsxs)(n.p,{children:["These tasks invoke the ",(0,r.jsx)(n.code,{children:"generateCodegenArtifactsFromSchema"})," on all the the imported projects of the app (the app and all the node modules which are linked to it). It generates the code in the corresponding ",(0,r.jsx)(n.code,{children:"node_modules/<dependency>"})," folder. So, for example, if you have a Fabric Native Component whose node module is called ",(0,r.jsx)(n.code,{children:"my-fabric-component"}),", the generated code is located in the ",(0,r.jsx)(n.code,{children:"SampleApp/node_modules/my-fabric-component/android/build/generated/source/codegen"})," path."]}),"\n",(0,r.jsx)(n.h2,{id:"the-generated-code-1",children:"The Generated Code"}),"\n",(0,r.jsx)(n.p,{children:"Once the Gradle task completes, you can see different structures for a Turbo Native Module or for a Fabric Native Component. The following tab shows how they appear:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"android-codegen",queryString:!0,defaultValue:l.Z.defaultNewArchFeature,values:l.Z.newArchFeatures,children:[(0,r.jsx)(s.Z,{value:"turbomodules",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"codegen\n\u251c\u2500\u2500 java\n\u2502   \u2514\u2500\u2500 com\n\u2502       \u2514\u2500\u2500 MyTurbomodule\n\u2502           \u2514\u2500\u2500 MyTurbomodule.java\n\u251c\u2500\u2500 jni\n\u2502   \u251c\u2500\u2500 Android.mk\n\u2502   \u251c\u2500\u2500 CMakeLists.txt\n\u2502   \u251c\u2500\u2500 MyTurbomodule-generated.cpp\n\u2502   \u251c\u2500\u2500 MyTurbomodule.h\n\u2502   \u2514\u2500\u2500 react\n\u2502       \u2514\u2500\u2500 renderer\n\u2502           \u2514\u2500\u2500 components\n\u2502               \u2514\u2500\u2500 MyTurbomodule\n\u2502                   \u251c\u2500\u2500 ComponentDescriptors.h\n\u2502                   \u251c\u2500\u2500 EventEmitters.cpp\n\u2502                   \u251c\u2500\u2500 EventEmitters.h\n\u2502                   \u251c\u2500\u2500 Props.cpp\n\u2502                   \u251c\u2500\u2500 Props.h\n\u2502                   \u251c\u2500\u2500 ShadowNodes.cpp\n\u2502                   \u2514\u2500\u2500 ShadowNodes.h\n\u2514\u2500\u2500 schema.json\n"})})}),(0,r.jsx)(s.Z,{value:"fabric-components",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"codegen\n\u251c\u2500\u2500 java\n\u2502   \u2514\u2500\u2500 com\n\u2502       \u2514\u2500\u2500 facebook\n\u2502           \u2514\u2500\u2500 react\n\u2502               \u2514\u2500\u2500 viewmanagers\n\u2502                   \u251c\u2500\u2500 MyFabricComponentManagerDelegate.java\n\u2502                   \u2514\u2500\u2500 MyFabricComponentManagerInterface.java\n\u251c\u2500\u2500 jni\n\u2502   \u251c\u2500\u2500 Android.mk\n\u2502   \u251c\u2500\u2500 CMakeLists.txt\n\u2502   \u251c\u2500\u2500 MyFabricComponent-generated.cpp\n\u2502   \u251c\u2500\u2500 MyFabricComponent.h\n\u2502   \u2514\u2500\u2500 react\n\u2502       \u2514\u2500\u2500 renderer\n\u2502           \u2514\u2500\u2500 components\n\u2502               \u2514\u2500\u2500 MyFabricComponent\n\u2502                   \u251c\u2500\u2500 ComponentDescriptors.h\n\u2502                   \u251c\u2500\u2500 EventEmitters.cpp\n\u2502                   \u251c\u2500\u2500 EventEmitters.h\n\u2502                   \u251c\u2500\u2500 Props.cpp\n\u2502                   \u251c\u2500\u2500 Props.h\n\u2502                   \u251c\u2500\u2500 ShadowNodes.cpp\n\u2502                   \u2514\u2500\u2500 ShadowNodes.h\n\u2514\u2500\u2500 schema.json\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Java can't interoperate seamlessly with C++ as Objective-C++ does. To work properly, ",(0,r.jsx)(n.strong,{children:"Codegen"})," creates some bridging between the Java and the C++ world in the ",(0,r.jsx)(n.code,{children:"jni"})," folder, where the Java Native Interfaces are defined."]}),"\n",(0,r.jsxs)(n.p,{children:["Notice that both Turbo Native Modules and Fabric Native Components come with two build file descriptors: the ",(0,r.jsx)(n.code,{children:"Android.mk"})," and the ",(0,r.jsx)(n.code,{children:"CMakeLists.txt"}),". These are used by the Android app to actually build the external modules."]}),"\n",(0,r.jsx)(n.h3,{id:"turbo-native-module",children:"Turbo Native Module"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," generates a Java abstract class in the ",(0,r.jsx)(n.code,{children:"java"})," package with the same name as that of the TurboModule. This abstract class has to be implemented by the JNI C++ implementation."]}),"\n",(0,r.jsxs)(n.p,{children:["Then, it generates the C++ files in the ",(0,r.jsx)(n.code,{children:"jni"})," folder. They follow the same iOS convention: there is an interface called ",(0,r.jsx)(n.code,{children:"MyTurbomodule.h"})," and an implementation file called ",(0,r.jsx)(n.code,{children:"MyTurbomodule-generated.cpp"}),". The former is an interface that allows React Native to initialize the JSI interface for the TurboModule. The latter is the implementation file which contains the logic to invoke the native method from JS and vice-versa."]}),"\n",(0,r.jsx)(n.h3,{id:"fabric-native-component",children:"Fabric Native Component"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," for a Fabric Native Component contains a ",(0,r.jsx)(n.code,{children:"MyFabricComponentManagerInterface.java"})," and a ",(0,r.jsx)(n.code,{children:"MyFabricComponentManagerDelegate.java"})," in the ",(0,r.jsx)(n.code,{children:"java"})," package. They are implemented and used by the native ",(0,r.jsx)(n.code,{children:"MyFabricComponentManager"})," required to properly load the component at runtime (See the guide on how to create a ",(0,r.jsx)(n.a,{href:"./pillars-fabric-components",children:"Fabric Native Component"})," for details)."]}),"\n",(0,r.jsxs)(n.p,{children:["Then, there is a layer of JNI C++ files that are used by Fabric to render the components. The basic element for a Fabric Component is the ",(0,r.jsx)(n.code,{children:"ShadowNode"}),": it represents a node in the React abstract tree. The ",(0,r.jsx)(n.code,{children:"ShadowNode"})," represents a React entity; therefore it could need some props, which are defined in the ",(0,r.jsx)(n.code,{children:"Props"})," files and, sometimes, an ",(0,r.jsx)(n.code,{children:"EventEmitter"}),", defined in the corresponding file."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Codegen"})," also creates a ",(0,r.jsx)(n.code,{children:"ComponentDescriptor.h"}),", which is required to get a proper handle on the Fabric Native Component."]})]})}const f=function(e={}){const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(m,e)})):m(e)}},86386:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(27378),a=t(38944);const o={tabItem:"tabItem_wHwb"};var i=Object.defineProperty,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,h=(e,n)=>{for(var t in n||(n={}))l.call(n,t)&&d(e,t,n[t]);if(s)for(var t of s(n))c.call(n,t)&&d(e,t,n[t]);return e};function u({children:e,hidden:n,className:t}){return r.createElement("div",h({role:"tabpanel",className:(0,a.Z)(o.tabItem,t)},{hidden:n}),e)}},48375:(e,n,t)=>{t.d(n,{Z:()=>q});var r=t(27378),a=t(38944),o=t(12112),i=t(3620),s=t(69490),l=t(14953),c=t(27886),d=t(7106),h=Object.defineProperty,u=Object.defineProperties,p=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,f=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,v=(e,n,t)=>n in e?h(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,g=(e,n)=>{for(var t in n||(n={}))f.call(n,t)&&v(e,t,n[t]);if(m)for(var t of m(n))b.call(n,t)&&v(e,t,n[t]);return e},j=(e,n)=>u(e,p(n));function x(e){var n,t;return null!=(t=null==(n=r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:n.filter(Boolean))?t:[]}function y(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=null!=n?n:function(e){return x(e).map((({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function w({value:e,tabValues:n}){return n.some((n=>n.value===e))}function C({queryString:e=!1,groupId:n}){const t=(0,i.k6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:e,groupId:n});return[(0,l._X)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace(j(g({},t.location),{search:n.toString()}))}),[a,t])]}function T(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=y(e),[i,l]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){var t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!w({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=null!=(t=n.find((e=>e.default)))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[c,h]=C({queryString:t,groupId:a}),[u,p]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,a]=(0,d.Nk)(n);return[t,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:a}),m=(()=>{const e=null!=c?c:u;return w({value:e,tabValues:o})?e:null})();(0,s.Z)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!w({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),p(e)}),[h,p,o]),tabValues:o}}var N=t(14185);const k={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var S=Object.defineProperty,M=Object.defineProperties,F=Object.getOwnPropertyDescriptors,O=Object.getOwnPropertySymbols,E=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable,R=(e,n,t)=>n in e?S(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,A=(e,n)=>{for(var t in n||(n={}))E.call(n,t)&&R(e,t,n[t]);if(O)for(var t of O(n))P.call(n,t)&&R(e,t,n[t]);return e},I=(e,n)=>M(e,F(n));function _({className:e,block:n,selectedValue:t,selectValue:i,tabValues:s}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),a=s[r].value;a!==t&&(c(n),i(a))},h=e=>{var n,t;let r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;r=null!=(n=l[t])?n:l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;r=null!=(t=l[n])?t:l[l.length-1];break}}null==r||r.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},e)},s.map((({value:e,label:n,attributes:o})=>r.createElement("li",I(A({role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,key:e,ref:e=>l.push(e),onKeyDown:h,onClick:d},o),{className:(0,a.Z)("tabs__item",k.tabItem,null==o?void 0:o.className,{"tabs__item--active":t===e})}),null!=n?n:e))))}function D({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function V(e){const n=T(e);return r.createElement("div",{className:(0,a.Z)("tabs-container",k.tabList)},r.createElement(_,A(A({},e),n)),r.createElement(D,A(A({},e),n)))}function q(e){const n=(0,N.Z)();return r.createElement(V,A({key:String(n)},e),x(e.children))}},11674:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(63445);const a=!!r.Z.canUseDOM&&navigator.platform.startsWith("Mac"),o=!!r.Z.canUseDOM&&navigator.platform.startsWith("Win"),i={defaultGuide:"quickstart",defaultJsDebugger:"flipper",defaultOs:a?"macos":o?"windows":"linux",defaultPackageManager:"npm",defaultPlatform:a?"ios":"android",defaultSyntax:"functional",defaultAndroidLanguage:"java",defaultJavaScriptSpecLanguages:"typescript",getDevNotesTabs:(e=["android","ios","web","windows"])=>[e.includes("android")?{label:"Android",value:"android"}:void 0,e.includes("ios")?{label:"iOS",value:"ios"}:void 0,e.includes("web")?{label:"Web",value:"web"}:void 0,e.includes("windows")?{label:"Windows",value:"windows"}:void 0].filter(Boolean),guides:[{label:"Expo Go Quickstart",value:"quickstart"},{label:"React Native CLI Quickstart",value:"native"}],oses:[{label:"macOS",value:"macos"},{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],packageManagers:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],platforms:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],syntax:[{label:"Function Component",value:"functional"},{label:"Class Component",value:"classical"}],androidLanguages:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],javaScriptSpecLanguages:[{label:"TypeScript",value:"typescript"},{label:"Flow",value:"flow"}],jsDebuggers:[{label:"Hermes Debugger / Expo",value:"hermes"},{label:"Flipper",value:"flipper"},{label:"New Debugger (Experimental)",value:"new-debugger"}],snackLanguages:[{label:"TypeScript",value:"typescript"},{label:"JavaScript",value:"javascript"}],defaultSnackLanguage:"typescript"}},71426:(e,n,t)=>{var r=t(27378),a=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var r,o={},c=null,d=null;for(r in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(d=n.ref),n)i.call(n,r)&&!l.hasOwnProperty(r)&&(o[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===o[r]&&(o[r]=n[r]);return{$$typeof:a,type:e,key:c,ref:d,props:o,_owner:s.current}}n.Fragment=o,n.jsx=c,n.jsxs=c},24246:(e,n,t)=>{e.exports=t(71426)},71670:(e,n,t)=>{t.d(n,{Zo:()=>s,ah:()=>o});var r=t(27378);const a=r.createContext({});function o(e){const n=r.useContext(a);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function s({components:e,children:n,disableParentContext:t}){let s;return s=t?"function"==typeof e?e({}):e||i:o(e),r.createElement(a.Provider,{value:s},n)}}}]);
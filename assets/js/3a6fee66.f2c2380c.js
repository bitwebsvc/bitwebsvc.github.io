/*! For license information please see 3a6fee66.f2c2380c.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[44577],{61647:(e,n,t)=>{t.d(n,{ZP:()=>i});var a=t(24246),r=t(71670);function o(e){const n=Object.assign({admonition:"admonition",p:"p",strong:"strong",a:"a"},(0,r.ah)(),e.components);return(0,a.jsxs)(n.admonition,{type:"caution",children:[(0,a.jsxs)(n.p,{children:["This documentation is still ",(0,a.jsx)(n.strong,{children:"experimental"})," and details are subject to changes as we iterate. Feel free to share your feedback on the ",(0,a.jsx)(n.a,{href:"https://github.com/reactwg/react-native-new-architecture/discussions/8",children:"discussion inside the working group"})," for this page."]}),(0,a.jsxs)(n.p,{children:["Moreover, it contains several ",(0,a.jsx)(n.strong,{children:"manual steps"}),". Please note that this won't be representative of the final developer experience once the New Architecture is stable. We're working on tools, templates and libraries to help you get started fast on the New Architecture, without having to go through the whole setup."]})]})}const i=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(o,e)})):o(e)}},84379:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var a=t(24246),r=t(71670),o=t(48375),i=t(86386),l=t(11674),c=t(61647);const s={id:"pillars-turbomodules",title:"Turbo Native Modules"},d=void 0,u={id:"the-new-architecture/pillars-turbomodules",title:"Turbo Native Modules",description:'If you\'ve worked with React Native, you may be familiar with the concept of Native Modules, which allow JavaScript and platform-native code to communicate over the React Native "bridge", which handles cross-platform serialization via JSON.',source:"@site/versioned_docs/version-0.73/the-new-architecture/pillars-turbomodule.md",sourceDirName:"the-new-architecture",slug:"/the-new-architecture/pillars-turbomodules",permalink:"/docs/the-new-architecture/pillars-turbomodules",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/react-native-website/blob/main/website/../docs/the-new-architecture/pillars-turbomodule.md",tags:[],version:"0.73",lastUpdatedAt:1704504779,formattedLastUpdatedAt:"Jan 6, 2024",frontMatter:{id:"pillars-turbomodules",title:"Turbo Native Modules"},sidebar:"docs",previous:{title:"What Composes the New Architecture",permalink:"/docs/the-new-architecture/pillars"},next:{title:"Fabric Native Components",permalink:"/docs/the-new-architecture/pillars-fabric-components"}},h={},p=[{value:"How to Create a Turbo Native Module",id:"how-to-create-a-turbo-native-module",level:2},{value:"1. Folder Setup",id:"1-folder-setup",level:2},{value:"2. JavaScript Specification",id:"2-javascript-specification",level:2},{value:"3. Module Configuration",id:"3-module-configuration",level:2},{value:"Shared",id:"shared",level:3},{value:"iOS: Create the <code>podspec</code> file",id:"ios-create-the-podspec-file",level:3},{value:"Android: <code>build.gradle</code> and <code>ReactPackage</code> class",id:"android-buildgradle-and-reactpackage-class",level:3},{value:"The <code>build.gradle</code> file",id:"the-buildgradle-file",level:4},{value:"The <code>ReactPackage</code> class",id:"the-reactpackage-class",level:4},{value:"4. Native Code",id:"4-native-code",level:2},{value:"iOS",id:"ios",level:3},{value:"Generate the code - iOS",id:"generate-the-code---ios",level:4},{value:"Write the Native iOS Code",id:"write-the-native-ios-code",level:4},{value:"RTNCalculator.h",id:"rtncalculatorh",level:5},{value:"RTNCalculator.mm",id:"rtncalculatormm",level:5},{value:"Android",id:"android",level:3},{value:"Generate the Code - Android",id:"generate-the-code---android",level:4},{value:"Write the Native Android Code",id:"write-the-native-android-code",level:4},{value:"Creating the <code>CalculatorModule.java</code>",id:"creating-the-calculatormodulejava",level:5},{value:"Updating the <code>CalculatorPackage.java</code>",id:"updating-the-calculatorpackagejava",level:5},{value:"Final structure",id:"final-structure",level:3},{value:"5. Adding the Turbo Native Module to your App",id:"5-adding-the-turbo-native-module-to-your-app",level:2},{value:"Shared",id:"shared-1",level:3},{value:"iOS",id:"ios-1",level:3},{value:"Android",id:"android-1",level:3},{value:"JavaScript",id:"javascript",level:3}];function m(e){const n=Object.assign({p:"p",a:"a",ul:"ul",li:"li",admonition:"admonition",strong:"strong",h2:"h2",ol:"ol",code:"code",pre:"pre",h3:"h3",h4:"h4",h5:"h5"},(0,r.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(c.ZP,{}),"\n",(0,a.jsxs)(n.p,{children:["If you've worked with React Native, you may be familiar with the concept of ",(0,a.jsx)(n.a,{href:"/docs/native-modules-intro",children:"Native Modules"}),', which allow JavaScript and platform-native code to communicate over the React Native "bridge", which handles cross-platform serialization via JSON.']}),"\n",(0,a.jsxs)(n.p,{children:["Turbo Native Modules are the next iteration on Native Modules that provide a few extra ",(0,a.jsx)(n.a,{href:"./why",children:"benefits"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Strongly typed interfaces that are consistent across platforms"}),"\n",(0,a.jsx)(n.li,{children:"The ability to write your code in C++, either exclusively or integrated with another native platform language, reducing the need to duplicate implementations across platforms"}),"\n",(0,a.jsx)(n.li,{children:"Lazy loading of modules, allowing for faster app startup"}),"\n",(0,a.jsx)(n.li,{children:"The use of JSI, a JavaScript interface for native code, allows for more efficient communication between native and JavaScript code than the bridge"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This guide will show you how to create a basic Turbo Native Module compatible with the latest version of React Native."}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["Turbo Native Modules only work with the ",(0,a.jsx)(n.strong,{children:"New Architecture"})," enabled.\nTo migrate to the ",(0,a.jsx)(n.strong,{children:"New Architecture"}),", follow the ",(0,a.jsx)(n.a,{href:"../new-architecture-intro",children:"Migration guide"})]})}),"\n",(0,a.jsx)(n.h2,{id:"how-to-create-a-turbo-native-module",children:"How to Create a Turbo Native Module"}),"\n",(0,a.jsx)(n.p,{children:"To create a Turbo Native Module, we need to:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Define the JavaScript specification."}),"\n",(0,a.jsx)(n.li,{children:"Configure the module so that Codegen can generate the scaffolding."}),"\n",(0,a.jsx)(n.li,{children:"Write the native code to finish implementing the module."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"1-folder-setup",children:"1. Folder Setup"}),"\n",(0,a.jsx)(n.p,{children:"In order to keep the module decoupled from the app, it's a good idea to define the module separately from the app and then add it as a dependency to your app later. This is also what you'll do for writing Turbo Native Modules that can be released as open-source libraries later."}),"\n",(0,a.jsxs)(n.p,{children:["Next to your application, create a folder called ",(0,a.jsx)(n.code,{children:"RTNCalculator"}),". ",(0,a.jsx)(n.strong,{children:"RTN"}),' stands for "',(0,a.jsx)(n.strong,{children:"R"}),"eac",(0,a.jsx)(n.strong,{children:"t"})," ",(0,a.jsx)(n.strong,{children:"N"}),'ative", and is a recommended prefix for React Native modules.']}),"\n",(0,a.jsxs)(n.p,{children:["Within ",(0,a.jsx)(n.code,{children:"RTNCalculator"}),", create three subfolders: ",(0,a.jsx)(n.code,{children:"js"}),", ",(0,a.jsx)(n.code,{children:"ios"}),", and ",(0,a.jsx)(n.code,{children:"android"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"The final result should look like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"TurboModulesGuide\n\u251c\u2500\u2500 MyApp\n\u2514\u2500\u2500 RTNCalculator\n    \u251c\u2500\u2500 android\n    \u251c\u2500\u2500 ios\n    \u2514\u2500\u2500 js\n"})}),"\n",(0,a.jsx)(n.h2,{id:"2-javascript-specification",children:"2. JavaScript Specification"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.strong,{children:"New Architecture"})," requires interfaces specified in a typed dialect of JavaScript (either ",(0,a.jsx)(n.a,{href:"https://flow.org/",children:"Flow"})," or ",(0,a.jsx)(n.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"}),"). ",(0,a.jsx)(n.strong,{children:"Codegen"})," will use these specifications to generate code in strongly-typed languages, including C++, Objective-C++, and Java."]}),"\n",(0,a.jsx)(n.p,{children:"There are two requirements the file containing this specification must meet:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["The file ",(0,a.jsx)(n.strong,{children:"must"})," be named ",(0,a.jsx)(n.code,{children:"Native<MODULE_NAME>"}),", with a ",(0,a.jsx)(n.code,{children:".js"})," or ",(0,a.jsx)(n.code,{children:".jsx"})," extension when using Flow, or a ",(0,a.jsx)(n.code,{children:".ts"}),", or ",(0,a.jsx)(n.code,{children:".tsx"})," extension when using TypeScript. Codegen will only look for files matching this pattern."]}),"\n",(0,a.jsxs)(n.li,{children:["The file must export a ",(0,a.jsx)(n.code,{children:"TurboModuleRegistrySpec"})," object."]}),"\n"]}),"\n",(0,a.jsxs)(o.Z,{groupId:"turbomodule-specs",queryString:!0,defaultValue:l.Z.defaultJavaScriptSpecLanguages,values:l.Z.javaScriptSpecLanguages,children:[(0,a.jsx)(i.Z,{value:"flow",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="NativeCalculator.js"',children:"// @flow\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport {TurboModuleRegistry} from 'react-native';\n\nexport interface Spec extends TurboModule {\n  add(a: number, b: number): Promise<number>;\n}\nexport default (TurboModuleRegistry.get<Spec>(\n  'RTNCalculator'\n): ?Spec);\n"})})}),(0,a.jsx)(i.Z,{value:"typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="NativeCalculator.ts"',children:"import {TurboModule, TurboModuleRegistry} from 'react-native';\n\nexport interface Spec extends TurboModule {\n  add(a: number, b: number): Promise<number>;\n}\n\nexport default TurboModuleRegistry.get<Spec>(\n  'RTNCalculator',\n) as Spec | null;\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"At the beginning of the spec files are the imports:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"TurboModule"})," type, which defines the base interface for all Turbo Native Modules"]}),"\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"TurboModuleRegistry"})," JavaScript module, which contains functions for loading Turbo Native Modules"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The second section of the file contains the interface specification for the Turbo Native Module. In this case, the interface defines the ",(0,a.jsx)(n.code,{children:"add"})," function, which takes two numbers and returns a promise that resolves to a number. This interface type ",(0,a.jsx)(n.strong,{children:"must"})," be named ",(0,a.jsx)(n.code,{children:"Spec"})," for a Turbo Native Module."]}),"\n",(0,a.jsxs)(n.p,{children:["Finally, we invoke ",(0,a.jsx)(n.code,{children:"TurboModuleRegistry.get"}),", passing the module's name, which will load the Turbo Native Module if it's available."]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsx)(n.p,{children:"We are writing JavaScript files importing types from libraries, without setting up a proper node module and installing its dependencies. Your IDE will not be able to resolve the import statements and you may see errors and warnings. This is expected and will not cause problems when you add the module to your app."})}),"\n",(0,a.jsx)(n.h2,{id:"3-module-configuration",children:"3. Module Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Next, you need to add some configuration for ",(0,a.jsx)(n.a,{href:"/docs/the-new-architecture/pillars-codegen",children:(0,a.jsx)(n.strong,{children:"Codegen"})})," and auto-linking."]}),"\n",(0,a.jsx)(n.p,{children:"Some configuration files are shared between iOS and Android, while the others are platform-specific."}),"\n",(0,a.jsx)(n.h3,{id:"shared",children:"Shared"}),"\n",(0,a.jsxs)(n.p,{children:["The shared configuration is a ",(0,a.jsx)(n.code,{children:"package.json"})," file used by yarn when installing your module. Create the ",(0,a.jsx)(n.code,{children:"package.json"})," file in the root of the ",(0,a.jsx)(n.code,{children:"RTNCalculator"})," directory."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "name": "rtn-calculator",\n  "version": "0.0.1",\n  "description": "Add numbers with Turbo Native Modules",\n  "react-native": "js/index",\n  "source": "js/index",\n  "files": [\n    "js",\n    "android",\n    "ios",\n    "rtn-calculator.podspec",\n    "!android/build",\n    "!ios/build",\n    "!**/__tests__",\n    "!**/__fixtures__",\n    "!**/__mocks__"\n  ],\n  "keywords": ["react-native", "ios", "android"],\n  "repository": "https://github.com/<your_github_handle>/rtn-calculator",\n  "author": "<Your Name> <your_email@your_provider.com> (https://github.com/<your_github_handle>)",\n  "license": "MIT",\n  "bugs": {\n    "url": "https://github.com/<your_github_handle>/rtn-calculator/issues"\n  },\n  "homepage": "https://github.com/<your_github_handle>/rtn-calculator#readme",\n  "devDependencies": {},\n  "peerDependencies": {\n    "react": "*",\n    "react-native": "*"\n  },\n  "codegenConfig": {\n    "name": "RTNCalculatorSpec",\n    "type": "modules",\n    "jsSrcsDir": "js",\n    "android": {\n      "javaPackageName": "com.rtncalculator"\n    }\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The upper part of the file contains some descriptive information like the name of the component, its version, and its source files. Make sure to update the various placeholders which are wrapped in ",(0,a.jsx)(n.code,{children:"<>"}),": replace all the occurrences of the ",(0,a.jsx)(n.code,{children:"<your_github_handle>"}),", ",(0,a.jsx)(n.code,{children:"<Your Name>"}),", and ",(0,a.jsx)(n.code,{children:"<your_email@your_provider.com>"})," tokens."]}),"\n",(0,a.jsxs)(n.p,{children:["Then there are the dependencies for this package. For this guide, you need ",(0,a.jsx)(n.code,{children:"react"})," and ",(0,a.jsx)(n.code,{children:"react-native"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Finally, the ",(0,a.jsx)(n.strong,{children:"Codegen"})," configuration is specified by the ",(0,a.jsx)(n.code,{children:"codegenConfig"})," field. It contains an object that defines the module through four fields:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"}),": The name of the library. By convention, you should add the ",(0,a.jsx)(n.code,{children:"Spec"})," suffix."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),": The type of module contained by this package. In this case, it is a Turbo Native Module; thus, the value to use is ",(0,a.jsx)(n.code,{children:"modules"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"jsSrcsDir"}),": the relative path to access the ",(0,a.jsx)(n.code,{children:"js"})," specification that is parsed by ",(0,a.jsx)(n.strong,{children:"Codegen"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"android.javaPackageName"}),": the package to use in the Java files generated by ",(0,a.jsx)(n.strong,{children:"Codegen"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"ios-create-the-podspec-file",children:["iOS: Create the ",(0,a.jsx)(n.code,{children:"podspec"})," file"]}),"\n",(0,a.jsxs)(n.p,{children:["For iOS, you'll need to create a ",(0,a.jsx)(n.code,{children:"rtn-calculator.podspec"})," file, which will define the module as a dependency for your app. It will stay in the root of ",(0,a.jsx)(n.code,{children:"RTNCalculator"}),", alongside the ",(0,a.jsx)(n.code,{children:"ios"})," folder."]}),"\n",(0,a.jsx)(n.p,{children:"The file will look like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",metastring:'title="rtn-calculator.podspec"',children:'require "json"\n\npackage = JSON.parse(File.read(File.join(__dir__, "package.json")))\n\nPod::Spec.new do |s|\n  s.name            = "rtn-calculator"\n  s.version         = package["version"]\n  s.summary         = package["description"]\n  s.description     = package["description"]\n  s.homepage        = package["homepage"]\n  s.license         = package["license"]\n  s.platforms       = { :ios => "11.0" }\n  s.author          = package["author"]\n  s.source          = { :git => package["repository"], :tag => "#{s.version}" }\n\n  s.source_files    = "ios/**/*.{h,m,mm,swift}"\n\n  install_modules_dependencies(s)\nend\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:".podspec"})," file has to be a sibling of the ",(0,a.jsx)(n.code,{children:"package.json"})," file, and its name is the one we set in the ",(0,a.jsx)(n.code,{children:"package.json"}),"'s ",(0,a.jsx)(n.code,{children:"name"})," property: ",(0,a.jsx)(n.code,{children:"rtn-calculator"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"The first part of the file prepares some variables that we use throughout the file. Then, there is a section that contains some information used to configure the pod, like its name, version, and description."}),"\n",(0,a.jsxs)(n.p,{children:["All the requirements for the New Architecture have been encapsulated in the ",(0,a.jsx)(n.a,{href:"https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L198",children:(0,a.jsx)(n.code,{children:"install_modules_dependencies"})}),". It takes care of installing the proper dependencies based on which architecture is currently enabled. It also automatically installs the ",(0,a.jsx)(n.code,{children:"React-Core"})," dependency in the old architecture."]}),"\n",(0,a.jsxs)(n.h3,{id:"android-buildgradle-and-reactpackage-class",children:["Android: ",(0,a.jsx)(n.code,{children:"build.gradle"})," and ",(0,a.jsx)(n.code,{children:"ReactPackage"})," class"]}),"\n",(0,a.jsxs)(n.p,{children:["To prepare Android to run ",(0,a.jsx)(n.strong,{children:"Codegen"})," you have to:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Update the ",(0,a.jsx)(n.code,{children:"build.gradle"})," file."]}),"\n",(0,a.jsxs)(n.li,{children:["A Java/Kotlin class that implements the ",(0,a.jsx)(n.code,{children:"ReactPackage"})," interface"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["At the end of these steps, the ",(0,a.jsx)(n.code,{children:"android"})," folder should look like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:'language-title="Android',metastring:'Folder Structure"',children:"android\n\u251c\u2500\u2500 build.gradle\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 com\n                \u2514\u2500\u2500 rtncalculator\n                    \u2514\u2500\u2500 CalculatorPackage.java\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"the-buildgradle-file",children:["The ",(0,a.jsx)(n.code,{children:"build.gradle"})," file"]}),"\n",(0,a.jsxs)(n.p,{children:["First, create a ",(0,a.jsx)(n.code,{children:"build.gradle"})," file in the ",(0,a.jsx)(n.code,{children:"android"})," folder, with the following contents:"]}),"\n",(0,a.jsxs)(o.Z,{groupId:"android-language",queryString:!0,defaultValue:l.Z.defaultAndroidLanguage,values:l.Z.androidLanguages,children:[(0,a.jsx)(i.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="build.gradle"',children:"buildscript {\n  ext.safeExtGet = {prop, fallback ->\n    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback\n  }\n  repositories {\n    google()\n    gradlePluginPortal()\n  }\n  dependencies {\n    classpath(\"com.android.tools.build:gradle:7.3.1\")\n  }\n}\n\napply plugin: 'com.android.library'\napply plugin: 'com.facebook.react'\n\nandroid {\n  compileSdkVersion safeExtGet('compileSdkVersion', 33)\n  namespace \"com.rtncalculator\"\n}\n\nrepositories {\n  mavenCentral()\n  google()\n}\n\ndependencies {\n  implementation 'com.facebook.react:react-native'\n}\n"})})}),(0,a.jsx)(i.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",metastring:'title="build.gradle"',children:"buildscript {\n  ext.safeExtGet = {prop, fallback ->\n    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback\n  }\n  repositories {\n    google()\n    gradlePluginPortal()\n  }\n  dependencies {\n    classpath(\"com.android.tools.build:gradle:7.3.1\")\n    classpath(\"org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.22\")\n  }\n}\n\napply plugin: 'com.android.library'\napply plugin: 'com.facebook.react'\napply plugin: 'org.jetbrains.kotlin.android'\n\nandroid {\n  compileSdkVersion safeExtGet('compileSdkVersion', 33)\n  namespace \"com.rtncalculator\"\n}\n\nrepositories {\n  mavenCentral()\n  google()\n}\n\ndependencies {\n  implementation 'com.facebook.react:react-native'\n}\n"})})})]}),"\n",(0,a.jsxs)(n.h4,{id:"the-reactpackage-class",children:["The ",(0,a.jsx)(n.code,{children:"ReactPackage"})," class"]}),"\n",(0,a.jsxs)(n.p,{children:["Then, you need a class that extends the ",(0,a.jsx)(n.code,{children:"TurboReactPackage"})," interface. To run the ",(0,a.jsx)(n.strong,{children:"Codegen"})," process, you don't have to completely implement the package class: an empty implementation is enough for the app to pick up the module as a proper React Native dependency and to try and generate the scaffolding code."]}),"\n",(0,a.jsxs)(n.p,{children:["Create an ",(0,a.jsx)(n.code,{children:"android/src/main/java/com/rtncalculator"})," folder and, inside that folder, create a ",(0,a.jsx)(n.code,{children:"CalculatorPackage.java"})," file."]}),"\n",(0,a.jsxs)(o.Z,{groupId:"android-language",queryString:!0,defaultValue:l.Z.defaultAndroidLanguage,values:l.Z.androidLanguages,children:[(0,a.jsx)(i.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="CalculatorPackage.java"',children:"package com.rtncalculator;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.Collections;\nimport java.util.List;\n\npublic class CalculatorPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n          return null;\n  }\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n      return null;\n  }\n}\n"})})}),(0,a.jsx)(i.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",metastring:'title="CalculatorPackage.kt"',children:"package com.rtncalculator;\n\nimport com.facebook.react.TurboReactPackage\nimport com.facebook.react.bridge.NativeModule\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.facebook.react.module.model.ReactModuleInfoProvider\n\nclass CalculatorPackage : TurboReactPackage() {\n  override fun getModule(name: String?, reactContext: ReactApplicationContext): NativeModule? = null\n\n  override fun getReactModuleInfoProvider(): ReactModuleInfoProvider? = null\n}\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["React Native uses the ",(0,a.jsx)(n.code,{children:"ReactPackage"})," interface to understand what native classes the app has to use for the ",(0,a.jsx)(n.code,{children:"ViewManager"})," and ",(0,a.jsx)(n.code,{children:"Native Modules"})," exported by the library."]}),"\n",(0,a.jsx)(n.h2,{id:"4-native-code",children:"4. Native Code"}),"\n",(0,a.jsx)(n.p,{children:"For the final step in getting your Turbo Native Module ready to go, you'll need to write some native code to connect the JavaScript side to the native platforms. This process requires two main steps:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Run ",(0,a.jsx)(n.strong,{children:"Codegen"})," to see what it generates."]}),"\n",(0,a.jsx)(n.li,{children:"Write your native code, implementing the generated interfaces."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["When developing a React Native app that uses a Turbo Native Module, it is the responsibility of the app to actually generate the code using ",(0,a.jsx)(n.strong,{children:"Codegen"}),". However, when developing a TurboModule as a library, we need to reference the generated code, and it is therefore, useful to see what the app will generate."]}),"\n",(0,a.jsxs)(n.p,{children:["As the first step for both iOS and Android, this guide shows how to execute manually the scripts used by ",(0,a.jsx)(n.strong,{children:"Codegen"})," to generate the required code. Further information on ",(0,a.jsx)(n.strong,{children:"Codegen"})," can be found ",(0,a.jsx)(n.a,{href:"/docs/the-new-architecture/pillars-codegen",children:"here"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["The code generated by ",(0,a.jsx)(n.strong,{children:"Codegen"})," in this step should not be committed to the versioning system. React Native apps are able to generate the code when the app is built. This allows an app to ensure that all libraries have code generated for the correct version of React Native."]})}),"\n",(0,a.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,a.jsx)(n.h4,{id:"generate-the-code---ios",children:"Generate the code - iOS"}),"\n",(0,a.jsx)(n.p,{children:"To run Codegen for the iOS platform, we need to open a terminal and run the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",metastring:'title="Running Codegen for iOS"',children:"cd MyApp\nyarn add ../RTNCalculator\ncd ..\nnode MyApp/node_modules/react-native/scripts/generate-codegen-artifacts.js \\\n  --path MyApp/ \\\n  --outputPath RTNCalculator/generated/\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This script first adds the ",(0,a.jsx)(n.code,{children:"RTNCalculator"})," module to the app with ",(0,a.jsx)(n.code,{children:"yarn add"}),". Then, it invokes Codegen via the ",(0,a.jsx)(n.code,{children:"generate-codegen-artifacts.js"})," script."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"--path"})," option specifies the path to the app, while the ",(0,a.jsx)(n.code,{children:"--outputPath"})," option tells Codegen where to output the generated code."]}),"\n",(0,a.jsx)(n.p,{children:"The output of this process is the following folder structure:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"generated\n\u2514\u2500\u2500 build\n    \u2514\u2500\u2500 generated\n        \u2514\u2500\u2500 ios\n            \u251c\u2500\u2500 FBReactNativeSpec\n            \u2502   \u251c\u2500\u2500 FBReactNativeSpec-generated.mm\n            \u2502   \u2514\u2500\u2500 FBReactNativeSpec.h\n            \u251c\u2500\u2500 RCTThirdPartyFabricComponentsProvider.h\n            \u251c\u2500\u2500 RCTThirdPartyFabricComponentsProvider.mm\n            \u251c\u2500\u2500 RTNCalculatorSpec\n            \u2502   \u251c\u2500\u2500 RTNCalculatorSpec-generated.mm\n            \u2502   \u2514\u2500\u2500 RTNCalculatorSpec.h\n            \u2514\u2500\u2500 react\n                \u2514\u2500\u2500 renderer\n                    \u2514\u2500\u2500 components\n                        \u2514\u2500\u2500 rncore\n                            \u251c\u2500\u2500 ComponentDescriptors.h\n                            \u251c\u2500\u2500 EventEmitters.cpp\n                            \u251c\u2500\u2500 EventEmitters.h\n                            \u251c\u2500\u2500 Props.cpp\n                            \u251c\u2500\u2500 Props.h\n                            \u251c\u2500\u2500 RCTComponentViewHelpers.h\n                            \u251c\u2500\u2500 ShadowNodes.cpp\n                            \u2514\u2500\u2500 ShadowNodes.h\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The relevant path for the Turbo Native Module interface is ",(0,a.jsx)(n.code,{children:"generated/build/generated/ios/RTNCalculatorSpec"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"./pillars-codegen",children:"Codegen"})," section for further details on the generated files."]}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsxs)(n.p,{children:["When generating the scaffolding code using ",(0,a.jsx)(n.strong,{children:"Codegen"}),", iOS does not clean the ",(0,a.jsx)(n.code,{children:"build"})," folder automatically. If you changed the Spec name, for example, and then run ",(0,a.jsx)(n.strong,{children:"Codegen"})," again, the old files would be retained.\nIf that happens, remember to remove the ",(0,a.jsx)(n.code,{children:"build"})," folder before running the ",(0,a.jsx)(n.strong,{children:"Codegen"})," again."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"cd MyApp/ios\nrm -rf build\n"})})]}),"\n",(0,a.jsx)(n.h4,{id:"write-the-native-ios-code",children:"Write the Native iOS Code"}),"\n",(0,a.jsxs)(n.p,{children:["Now add the Native code for your Turbo Native Module. Create two files in the ",(0,a.jsx)(n.code,{children:"RTNCalculator/ios"})," folder:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"RTNCalculator.h"}),", a header file for the module."]}),"\n",(0,a.jsxs)(n.li,{children:["The ",(0,a.jsx)(n.code,{children:"RTNCalculator.mm"}),", the implementation of the module."]}),"\n"]}),"\n",(0,a.jsx)(n.h5,{id:"rtncalculatorh",children:"RTNCalculator.h"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objc",metastring:'title="RTNCalculator.h"',children:"#import <RTNCalculatorSpec/RTNCalculatorSpec.h>\n\nNS_ASSUME_NONNULL_BEGIN\n\n@interface RTNCalculator : NSObject <NativeCalculatorSpec>\n\n@end\n\nNS_ASSUME_NONNULL_END\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This file defines the interface for the ",(0,a.jsx)(n.code,{children:"RTNCalculator"})," module. Here, we can add any native method we may want to invoke on the view. For this guide, we don't need anything, therefore the interface is empty."]}),"\n",(0,a.jsx)(n.h5,{id:"rtncalculatormm",children:"RTNCalculator.mm"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-objc",metastring:'title="RTNCalculator.mm"',children:'#import "RTNCalculatorSpec.h"\n#import "RTNCalculator.h"\n\n@implementation RTNCalculator\n\nRCT_EXPORT_MODULE()\n\n- (void)add:(double)a b:(double)b resolve:(RCTPromiseResolveBlock)resolve reject:(RCTPromiseRejectBlock)reject {\n    NSNumber *result = [[NSNumber alloc] initWithInteger:a+b];\n    resolve(result);\n}\n\n- (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:\n    (const facebook::react::ObjCTurboModule::InitParams &)params\n{\n    return std::make_shared<facebook::react::NativeCalculatorSpecJSI>(params);\n}\n\n@end\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The most important call is to the ",(0,a.jsx)(n.code,{children:"RCT_EXPORT_MODULE"}),", which is required to export the module so that React Native can load the Turbo Native Module."]}),"\n",(0,a.jsxs)(n.p,{children:["Then the ",(0,a.jsx)(n.code,{children:"add"})," method, whose signature must match the one specified by the Codegen in the ",(0,a.jsx)(n.code,{children:"RTNCalculatorSpec.h"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Finally, the ",(0,a.jsx)(n.code,{children:"getTurboModule"})," method gets an instance of the Turbo Native Module so that the JavaScript side can invoke its methods. The function is defined in (and requested by) the ",(0,a.jsx)(n.code,{children:"RTNCalculatorSpec.h"})," file that was generated earlier by Codegen."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["There are other macros that can be used to export modules and methods. You view the code that specifies them ",(0,a.jsx)(n.a,{href:"https://github.com/facebook/react-native/blob/main/packages/react-native/React/Base/RCTBridgeModule.h",children:"here"}),"."]})}),"\n",(0,a.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,a.jsx)(n.p,{children:"Android follows similar steps to iOS. We have to generate the code for Android, and then we have to write some native code to make it work."}),"\n",(0,a.jsx)(n.h4,{id:"generate-the-code---android",children:"Generate the Code - Android"}),"\n",(0,a.jsx)(n.p,{children:"To generate the code for Android, we need to manually invoke Codegen. This is done similarly to what we did for iOS: first, we need to add the package to the app, and then we need to invoke a script."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",metastring:'title="Running Codegen for Android"',children:"cd MyApp\nyarn add ../RTNCalculator\ncd android\n./gradlew generateCodegenArtifactsFromSchema\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This script first adds the package to the app, in the same way iOS does. Then, after moving to the ",(0,a.jsx)(n.code,{children:"android"})," folder, it invokes a Gradle task to create the generated code."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["To run ",(0,a.jsx)(n.strong,{children:"Codegen"}),", you need to enable the ",(0,a.jsx)(n.strong,{children:"New Architecture"})," in the Android app. This can be done by opening the ",(0,a.jsx)(n.code,{children:"gradle.properties"})," files and by switching the ",(0,a.jsx)(n.code,{children:"newArchEnabled"})," property from ",(0,a.jsx)(n.code,{children:"false"})," to ",(0,a.jsx)(n.code,{children:"true"}),"."]})}),"\n",(0,a.jsxs)(n.p,{children:["The generated code is stored in the ",(0,a.jsx)(n.code,{children:"MyApp/node_modules/rtn-calculator/android/build/generated/source/codegen"})," folder and it has this structure:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:'language-title="Android',metastring:'generated code"',children:"codegen\n\u251c\u2500\u2500 java\n\u2502   \u2514\u2500\u2500 com\n\u2502       \u2514\u2500\u2500 rtncalculator\n\u2502           \u2514\u2500\u2500 NativeCalculatorSpec.java\n\u251c\u2500\u2500 jni\n\u2502   \u251c\u2500\u2500 Android.mk\n\u2502   \u251c\u2500\u2500 CMakeLists.txt\n\u2502   \u251c\u2500\u2500 RTNCalculator-generated.cpp\n\u2502   \u251c\u2500\u2500 RTNCalculator.h\n\u2502   \u2514\u2500\u2500 react\n\u2502       \u2514\u2500\u2500 renderer\n\u2502           \u2514\u2500\u2500 components\n\u2502               \u2514\u2500\u2500 RTNCalculator\n\u2502                   \u251c\u2500\u2500 ComponentDescriptors.h\n\u2502                   \u251c\u2500\u2500 EventEmitters.cpp\n\u2502                   \u251c\u2500\u2500 EventEmitters.h\n\u2502                   \u251c\u2500\u2500 Props.cpp\n\u2502                   \u251c\u2500\u2500 Props.h\n\u2502                   \u251c\u2500\u2500 ShadowNodes.cpp\n\u2502                   \u2514\u2500\u2500 ShadowNodes.h\n\u2514\u2500\u2500 schema.json\n"})}),"\n",(0,a.jsx)(n.h4,{id:"write-the-native-android-code",children:"Write the Native Android Code"}),"\n",(0,a.jsx)(n.p,{children:"The native code for the Android side of a Turbo Native Module requires:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["to create a ",(0,a.jsx)(n.code,{children:"CalculatorModule.java"})," that implements the module."]}),"\n",(0,a.jsxs)(n.li,{children:["to update the ",(0,a.jsx)(n.code,{children:"CalculatorPackage.java"})," created in the previous step."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The final structure within the Android library should look like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:'language-title="Android',metastring:'Folder Structure"',children:"android\n\u251c\u2500\u2500 build.gradle\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 com\n                \u2514\u2500\u2500 rtncalculator\n                    \u251c\u2500\u2500 CalculatorModule.java\n                    \u2514\u2500\u2500 CalculatorPackage.java\n"})}),"\n",(0,a.jsxs)(n.h5,{id:"creating-the-calculatormodulejava",children:["Creating the ",(0,a.jsx)(n.code,{children:"CalculatorModule.java"})]}),"\n",(0,a.jsxs)(o.Z,{groupId:"android-language",queryString:!0,defaultValue:l.Z.defaultAndroidLanguage,values:l.Z.androidLanguages,children:[(0,a.jsx)(i.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",metastring:'title="CalculatorModule.java"',children:'package com.rtncalculator;\n\nimport androidx.annotation.NonNull;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.Promise;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.bridge.ReactContext;\nimport com.facebook.react.bridge.ReactContextBaseJavaModule;\nimport com.facebook.react.bridge.ReactMethod;\nimport java.util.Map;\nimport java.util.HashMap;\nimport com.rtncalculator.NativeCalculatorSpec;\n\npublic class CalculatorModule extends NativeCalculatorSpec {\n\n    public static String NAME = "RTNCalculator";\n\n    CalculatorModule(ReactApplicationContext context) {\n        super(context);\n    }\n\n    @Override\n    @NonNull\n    public String getName() {\n        return NAME;\n    }\n\n    @Override\n    public void add(double a, double b, Promise promise) {\n        promise.resolve(a + b);\n    }\n}\n'})})}),(0,a.jsx)(i.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",metastring:'title="CalculatorModule.kt"',children:'package com.rtncalculator\n\nimport com.facebook.react.bridge.Promise\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.rtncalculator.NativeCalculatorSpec\n\nclass CalculatorModule(reactContext: ReactApplicationContext) : NativeCalculatorSpec(reactContext) {\n\n  override fun getName() = NAME\n\n  override fun add(a: Double, b: Double, promise: Promise) {\n    promise.resolve(a + b)\n  }\n\n  companion object {\n    const val NAME = "RTNCalculator"\n  }\n}\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["This class implements the module itself, which extends the ",(0,a.jsx)(n.code,{children:"NativeCalculatorSpec"})," that was generated from the ",(0,a.jsx)(n.code,{children:"NativeCalculator"})," JavaScript specification file."]}),"\n",(0,a.jsxs)(n.h5,{id:"updating-the-calculatorpackagejava",children:["Updating the ",(0,a.jsx)(n.code,{children:"CalculatorPackage.java"})]}),"\n",(0,a.jsxs)(o.Z,{groupId:"android-language",queryString:!0,defaultValue:l.Z.defaultAndroidLanguage,values:l.Z.androidLanguages,children:[(0,a.jsx)(i.Z,{value:"java",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:'title="CalculatorPackage.java"',children:"package com.rtncalculator;\n\nimport androidx.annotation.Nullable;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\n+ import com.facebook.react.module.model.ReactModuleInfo;\nimport com.facebook.react.module.model.ReactModuleInfoProvider;\nimport com.facebook.react.TurboReactPackage;\n\nimport java.util.Collections;\nimport java.util.List;\n+ import java.util.HashMap;\n+ import java.util.Map;\n\npublic class CalculatorPackage extends TurboReactPackage {\n\n  @Nullable\n  @Override\n  public NativeModule getModule(String name, ReactApplicationContext reactContext) {\n+      if (name.equals(CalculatorModule.NAME)) {\n+          return new CalculatorModule(reactContext);\n+      } else {\n          return null;\n+      }\n  }\n\n\n  @Override\n  public ReactModuleInfoProvider getReactModuleInfoProvider() {\n-      return null;\n+      return () -> {\n+          final Map<String, ReactModuleInfo> moduleInfos = new HashMap<>();\n+          moduleInfos.put(\n+                  CalculatorModule.NAME,\n+                  new ReactModuleInfo(\n+                          CalculatorModule.NAME,\n+                          CalculatorModule.NAME,\n+                          false, // canOverrideExistingModule\n+                          false, // needsEagerInit\n+                          true, // hasConstants\n+                          false, // isCxxModule\n+                          true // isTurboModule\n+          ));\n+          return moduleInfos;\n+      };\n  }\n}\n"})})}),(0,a.jsx)(i.Z,{value:"kotlin",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:'title="CalculatorPackage.kt"',children:"package com.rtncalculator;\n\nimport com.facebook.react.TurboReactPackage\nimport com.facebook.react.bridge.NativeModule\nimport com.facebook.react.bridge.ReactApplicationContext\n+import com.facebook.react.module.model.ReactModuleInfo\nimport com.facebook.react.module.model.ReactModuleInfoProvider\n\nclass CalculatorPackage : TurboReactPackage() {\n- override fun getModule(name: String?, reactContext: ReactApplicationContext): NativeModule? = null\n+ override fun getModule(name: String?, reactContext: ReactApplicationContext): NativeModule? =\n+   if (name == CalculatorModule.NAME) {\n+     CalculatorModule(reactContext)\n+   } else {\n+     null\n+   }\n\n- override fun getReactModuleInfoProvider() = ReactModuleInfoProvider? = null\n+ override fun getReactModuleInfoProvider() = ReactModuleInfoProvider {\n+   mapOf(\n+     CalculatorModule.NAME to ReactModuleInfo(\n+       CalculatorModule.NAME,\n+       CalculatorModule.NAME,\n+       false, // canOverrideExistingModule\n+       false, // needsEagerInit\n+       true, // hasConstants\n+       false, // isCxxModule\n+       true // isTurboModule\n+     )\n+   )\n+ }\n}\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["This is the last piece of Native Code for Android. It defines the ",(0,a.jsx)(n.code,{children:"TurboReactPackage"})," object that will be used by the app to load the module."]}),"\n",(0,a.jsx)(n.h3,{id:"final-structure",children:"Final structure"}),"\n",(0,a.jsx)(n.p,{children:"The final structure should look like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"TurboModulesGuide\n\u251c\u2500\u2500 MyApp\n\u2514\u2500\u2500 RTNCalculator\n    \u251c\u2500\u2500 android\n    \u2502   \u251c\u2500\u2500 build.gradle\n    \u2502   \u2514\u2500\u2500 src\n    \u2502       \u2514\u2500\u2500 main\n    \u2502           \u2514\u2500\u2500 java\n    \u2502               \u2514\u2500\u2500 com\n    \u2502                   \u2514\u2500\u2500 rtncalculator\n    \u2502                       \u251c\u2500\u2500 CalculatorPackage.java\n    \u2502                       \u2514\u2500\u2500 CalculatorModule.java\n    \u251c\u2500\u2500 generated\n    \u251c\u2500\u2500 ios\n    \u2502   \u251c\u2500\u2500 RTNCalculator.h\n    \u2502   \u2514\u2500\u2500 RTNCalculator.mm\n    \u251c\u2500\u2500 js\n    \u2502   \u2514\u2500\u2500 NativeCalculator.ts\n    \u251c\u2500\u2500 package.json\n    \u2514\u2500\u2500 rtn-calculator.podspec\n"})}),"\n",(0,a.jsx)(n.h2,{id:"5-adding-the-turbo-native-module-to-your-app",children:"5. Adding the Turbo Native Module to your App"}),"\n",(0,a.jsx)(n.p,{children:"Now you can install and use the Turbo Native Module in your app."}),"\n",(0,a.jsx)(n.h3,{id:"shared-1",children:"Shared"}),"\n",(0,a.jsx)(n.p,{children:"First of all, we need to add the NPM package which contains the Component to the app. This can be done with the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"cd MyApp\nyarn add ../RTNCalculator\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This command will add the ",(0,a.jsx)(n.code,{children:"RTNCalculator"})," module to the ",(0,a.jsx)(n.code,{children:"node_modules"})," of your app."]}),"\n",(0,a.jsx)(n.h3,{id:"ios-1",children:"iOS"}),"\n",(0,a.jsx)(n.p,{children:"Then, you need to install the new dependencies in your iOS project. To do so, run these commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"cd ios\nRCT_NEW_ARCH_ENABLED=1 bundle exec pod install\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This command will look for all the dependencies of the project and it will install the iOS ones. The ",(0,a.jsx)(n.code,{children:"RCT_NEW_ARCH_ENABLED=1"})," instruct ",(0,a.jsx)(n.strong,{children:"CocoaPods"})," that it has to run some additional operations to run ",(0,a.jsx)(n.strong,{children:"Codegen"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["You may have to run ",(0,a.jsx)(n.code,{children:"bundle install"})," once before you can use ",(0,a.jsx)(n.code,{children:"RCT_NEW_ARCH_ENABLED=1 bundle exec pod install"}),". You won't need to run ",(0,a.jsx)(n.code,{children:"bundle install"})," anymore, unless you need to change the Ruby dependencies."]})}),"\n",(0,a.jsx)(n.h3,{id:"android-1",children:"Android"}),"\n",(0,a.jsxs)(n.p,{children:["Android configuration requires to enable the ",(0,a.jsx)(n.strong,{children:"New Architecture"}),":"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Open the ",(0,a.jsx)(n.code,{children:"android/gradle.properties"})," file"]}),"\n",(0,a.jsxs)(n.li,{children:["Scroll down to the end of the file and switch the ",(0,a.jsx)(n.code,{children:"newArchEnabled"})," property from ",(0,a.jsx)(n.code,{children:"false"})," to ",(0,a.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,a.jsx)(n.p,{children:"Now you can use your Turbo Native Module calculator in your app!"}),"\n",(0,a.jsxs)(n.p,{children:["Here's an example App.js file using the ",(0,a.jsx)(n.code,{children:"add"})," method:"]}),"\n",(0,a.jsxs)(o.Z,{groupId:"final-app",queryString:!0,defaultValue:l.Z.defaultJavaScriptSpecLanguages,values:l.Z.javaScriptSpecLanguages,children:[(0,a.jsx)(i.Z,{value:"flow",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="App.js"',children:"/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\nimport React from 'react';\nimport {useState} from 'react';\nimport type {Node} from 'react';\nimport {\n  SafeAreaView,\n  StatusBar,\n  Text,\n  Button,\n} from 'react-native';\nimport RTNCalculator from 'rtn-calculator/js/NativeCalculator';\n\nconst App: () => Node = () => {\n  const [result, setResult] = useState<number | null>(null);\n  return (\n    <SafeAreaView>\n      <StatusBar barStyle={'dark-content'} />\n      <Text style={{marginLeft: 20, marginTop: 20}}>\n        3+7={result ?? '??'}\n      </Text>\n      <Button\n        title=\"Compute\"\n        onPress={async () => {\n          const value = await RTNCalculator.add(3, 7);\n          setResult(value);\n        }}\n      />\n    </SafeAreaView>\n  );\n};\nexport default App;\n"})})}),(0,a.jsx)(i.Z,{value:"typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="App.tsx"',children:"/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n */\nimport React from 'react';\nimport {useState} from 'react';\nimport {\n  SafeAreaView,\n  StatusBar,\n  Text,\n  Button,\n} from 'react-native';\nimport RTNCalculator from 'rtn-calculator/js/NativeCalculator';\n\nconst App: () => JSX.Element = () => {\n  const [result, setResult] = useState<number | null>(null);\n  return (\n    <SafeAreaView>\n      <StatusBar barStyle={'dark-content'} />\n      <Text style={{marginLeft: 20, marginTop: 20}}>\n        3+7={result ?? '??'}\n      </Text>\n      <Button\n        title=\"Compute\"\n        onPress={async () => {\n          const value = await RTNCalculator?.add(3, 7);\n          setResult(value ?? null);\n        }}\n      />\n    </SafeAreaView>\n  );\n};\nexport default App;\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"Try this out to see your Turbo Native Module in action!"})]})}const g=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(m,e)})):m(e)}},86386:(e,n,t)=>{t.d(n,{Z:()=>h});var a=t(27378),r=t(38944);const o={tabItem:"tabItem_wHwb"};var i=Object.defineProperty,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?i(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&d(e,t,n[t]);if(l)for(var t of l(n))s.call(n,t)&&d(e,t,n[t]);return e};function h({children:e,hidden:n,className:t}){return a.createElement("div",u({role:"tabpanel",className:(0,r.Z)(o.tabItem,t)},{hidden:n}),e)}},48375:(e,n,t)=>{t.d(n,{Z:()=>D});var a=t(27378),r=t(38944),o=t(12112),i=t(3620),l=t(69490),c=t(14953),s=t(27886),d=t(7106),u=Object.defineProperty,h=Object.defineProperties,p=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable,j=(e,n,t)=>n in e?u(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,v=(e,n)=>{for(var t in n||(n={}))g.call(n,t)&&j(e,t,n[t]);if(m)for(var t of m(n))f.call(n,t)&&j(e,t,n[t]);return e},x=(e,n)=>h(e,p(n));function b(e){var n,t;return null!=(t=null==(n=a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:n.filter(Boolean))?t:[]}function y(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=null!=n?n:function(e){return b(e).map((({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a})))}(t);return function(e){const n=(0,s.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function w({value:e,tabValues:n}){return n.some((n=>n.value===e))}function N({queryString:e=!1,groupId:n}){const t=(0,i.k6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:e,groupId:n});return[(0,c._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace(x(v({},t.location),{search:n.toString()}))}),[r,t])]}function C(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=y(e),[i,c]=(0,a.useState)((()=>function({defaultValue:e,tabValues:n}){var t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!w({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=null!=(t=n.find((e=>e.default)))?t:n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[s,u]=N({queryString:t,groupId:r}),[h,p]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,d.Nk)(n);return[t,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:r}),m=(()=>{const e=null!=s?s:h;return w({value:e,tabValues:o})?e:null})();(0,l.Z)((()=>{m&&c(m)}),[m]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!w({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),p(e)}),[u,p,o]),tabValues:o}}var T=t(14185);const k={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var S=Object.defineProperty,M=Object.defineProperties,R=Object.getOwnPropertyDescriptors,A=Object.getOwnPropertySymbols,P=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable,_=(e,n,t)=>n in e?S(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,E=(e,n)=>{for(var t in n||(n={}))P.call(n,t)&&_(e,t,n[t]);if(A)for(var t of A(n))O.call(n,t)&&_(e,t,n[t]);return e},I=(e,n)=>M(e,R(n));function L({className:e,block:n,selectedValue:t,selectValue:i,tabValues:l}){const c=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.o5)(),d=e=>{const n=e.currentTarget,a=c.indexOf(n),r=l[a].value;r!==t&&(s(n),i(r))},u=e=>{var n,t;let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=null!=(n=c[t])?n:c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;a=null!=(t=c[n])?t:c[c.length-1];break}}null==a||a.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},e)},l.map((({value:e,label:n,attributes:o})=>a.createElement("li",I(E({role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,key:e,ref:e=>c.push(e),onKeyDown:u,onClick:d},o),{className:(0,r.Z)("tabs__item",k.tabItem,null==o?void 0:o.className,{"tabs__item--active":t===e})}),null!=n?n:e))))}function Z({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function V(e){const n=C(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",k.tabList)},a.createElement(L,E(E({},e),n)),a.createElement(Z,E(E({},e),n)))}function D(e){const n=(0,T.Z)();return a.createElement(V,E({key:String(n)},e),b(e.children))}},11674:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(63445);const r=!!a.Z.canUseDOM&&navigator.platform.startsWith("Mac"),o=!!a.Z.canUseDOM&&navigator.platform.startsWith("Win"),i={defaultGuide:"quickstart",defaultJsDebugger:"flipper",defaultOs:r?"macos":o?"windows":"linux",defaultPackageManager:"npm",defaultPlatform:r?"ios":"android",defaultSyntax:"functional",defaultAndroidLanguage:"java",defaultJavaScriptSpecLanguages:"typescript",getDevNotesTabs:(e=["android","ios","web","windows"])=>[e.includes("android")?{label:"Android",value:"android"}:void 0,e.includes("ios")?{label:"iOS",value:"ios"}:void 0,e.includes("web")?{label:"Web",value:"web"}:void 0,e.includes("windows")?{label:"Windows",value:"windows"}:void 0].filter(Boolean),guides:[{label:"Expo Go Quickstart",value:"quickstart"},{label:"React Native CLI Quickstart",value:"native"}],oses:[{label:"macOS",value:"macos"},{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],packageManagers:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],platforms:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],syntax:[{label:"Function Component",value:"functional"},{label:"Class Component",value:"classical"}],androidLanguages:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],javaScriptSpecLanguages:[{label:"TypeScript",value:"typescript"},{label:"Flow",value:"flow"}],jsDebuggers:[{label:"Hermes Debugger / Expo",value:"hermes"},{label:"Flipper",value:"flipper"},{label:"New Debugger (Experimental)",value:"new-debugger"}],snackLanguages:[{label:"TypeScript",value:"typescript"},{label:"JavaScript",value:"javascript"}],defaultSnackLanguage:"typescript"}},71426:(e,n,t)=>{var a=t(27378),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,l=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function s(e,n,t){var a,o={},s=null,d=null;for(a in void 0!==t&&(s=""+t),void 0!==n.key&&(s=""+n.key),void 0!==n.ref&&(d=n.ref),n)i.call(n,a)&&!c.hasOwnProperty(a)&&(o[a]=n[a]);if(e&&e.defaultProps)for(a in n=e.defaultProps)void 0===o[a]&&(o[a]=n[a]);return{$$typeof:r,type:e,key:s,ref:d,props:o,_owner:l.current}}n.Fragment=o,n.jsx=s,n.jsxs=s},24246:(e,n,t)=>{e.exports=t(71426)},71670:(e,n,t)=>{t.d(n,{Zo:()=>l,ah:()=>o});var a=t(27378);const r=a.createContext({});function o(e){const n=a.useContext(r);return a.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function l({components:e,children:n,disableParentContext:t}){let l;return l=t?"function"==typeof e?e({}):e||i:o(e),a.createElement(r.Provider,{value:l},n)}}}]);